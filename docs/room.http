### should deny /room request without authentication
GET {{host}}/room
Authorization:

> {%
client.test("Request executed successfully", () =>
  client.assert(response.status === 401, "Response status is not 401 (Deny)")
);
%}

### should forbidden /room request with admin authentication
GET {{host}}/room
Authorization: Basic admin {{admin_pass}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 403, "Response status is not 403 (Forbidden)");
});
%}

### /room request with user authentication
GET {{host}}/room
Authorization: Basic albert.wells@guest.com ag1ngH0T@Lguest

### GET /room request with employee authentication
GET {{host}}/room
Authorization: Basic warren.trent@hotel.com {{warren_pass}}

### GET /room request with employee authentication
GET {{host}}/room/{{id}}
Authorization: Basic warren.trent@hotel.com {{warren_pass}}

### DELETE /room request with employee authentication
DELETE {{host}}/room/15
Authorization: Basic warren.trent@hotel.com {{warren_pass}}

### room request with employee authentication
GET {{host}}/room/{{id}}
Authorization: Basic warren.trent@hotel.com {{warren_pass}}

###
PUT {{host}}/room/{{id}}
Authorization: Basic warren.trent@hotel.com {{warren_pass}}
Content-Type: application/json

{
  "number": "103",
  "description": "Double Room"
}
